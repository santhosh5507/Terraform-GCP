steps:
- id: 'branch name'
  name: 'alpine'
  entrypoint: 'sh'  
  args: 
  - '-c'
  - | 
      echo "***********************"
      echo "$BRANCH_NAME"
      echo "***********************"
- id: 'tf init'
  name: 'hashicorp/terraform:0.12.20'
  entrypoint: 'sh'
  args: 
  - '-c'
  - |
      if [ -d "./$BRANCH_NAME/" ]; then
        cd ./$BRANCH_NAME
        terraform init
      else
        for dir in ./*/
        do 
          cd ${dir}   
          env=${dir%*/}
          env=${projects/}
          echo ""
          echo "*************** TERRAFORM INIT ******************"
          echo "******* At Branch: ${env} ********"
          echo "*************************************************"
          terraform init || exit 1
          cd ../../
        done
      fi 
# [START tf-plan]
- id: 'tf plan'
  name: 'hashicorp/terraform:0.12.20'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      if [ -d "$BRANCH_NAME/" ]; then
        cd $BRANCH_NAME
        terraform plan
      else
        for dir in ./*/
        do 
          cd ${dir}   
          env=${dir%*/}
          env=${projects/}  
          echo ""
          echo "*************** TERRAFOM PLAN ******************"
          echo "******* At branch: ${env} ********"
          echo "*************************************************"
          terraform plan || exit 1
          cd ../../
        done
      fi 
# [END tf-plan]

# [START tf-apply]
- id: 'tf apply'
  name: 'hashicorp/terraform:0.12.20'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      if [ -d "$BRANCH_NAME/" ]; then
        cd $BRANCH_NAME/      
        terraform apply -auto-approve
      else
        echo "***************************** SKIPPING APPLYING *******************************"
        echo "Branch '$BRANCH_NAME' does not represent an oficial environment."
        echo "*******************************************************************************"
      fi
# [END tf-apply]      
